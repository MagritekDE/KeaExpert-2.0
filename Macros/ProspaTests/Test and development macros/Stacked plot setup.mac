procedure(Stacked plot setup)

   n = :windowdefinition()
   assignctrls(n)
   :init()
   showwindow(n)

endproc()

procedure(windowdefinition)

   # Automatically generated window definition procedure.
   # Any code added manually will be removed if layout modified interactively
   n = window("Stacked plot setup", -1, -1, 420, 247, "resizable")

      # Define all controls with basic parameters
      windowvar(minYAxisCtrl,maxYAxisCtrl,mappingCtrl,tiltCtrl)
      textbox(1, 328, 34, 51)
      statictext(2, 322, 38, "right", "Minimum y value")
      textbox(3, 328, 64, 51)
      statictext(4, 322, 68, "right", "Maximum y value")
      groupbox(5, "Vertical axis range", 209, 9, 185, 137)
      radiobuttons(6, 328, 98, 20, "vertical", "lin,log", "lin")
      statictext(7, 322, 99, "right", "Linear scale")
      statictext(8, 322, 118, "right", "Logariithmic scale")
      button(9, 220, 159, 48, 26, "Apply",
         :apply();)
      button(10, 280, 159, 48, 26, "Close",
         closewindow(0);)
      button(19, 220, 198, 48, 26, "Help")

      textbox(11, 130, 140, 51)
      statictext(12, 124, 144, "right", "Tilt (ppm)")
      textbox(13, 130, 37, 51)
      statictext(14, 124, 41, "right", "Minimum y value")
      textbox(15, 130, 67, 51)
      statictext(16, 124, 71, "right", "Maximum y value")
      groupbox(17, "Vertical data range", 11, 9, 185, 102)
      groupbox(18, "Data display", 11, 119, 185, 112)
      colorbox(21, 130, 200, 22, 22, [255,0,0],:selectColor(21))
      statictext(22, 124, 203, "right", "Start color")
      colorbox(23, 130, 170, 22, 22, [255,0,0],:selectColor(23))
      statictext(24, 124, 173, "right", "End color")

     # Set other control parameters
      setpar(n,1,"objID","minDispYAxisCtrl")
      setpar(n,3,"objID","maxDispYAxisCtrl")
      setpar(n,6,"objID","mappingCtrl")
      setpar(n,11,"objID","tiltCtrl")
      setpar(n,13,"objID","minYAxisCtrl")
      setpar(n,15,"objID","maxYAxisCtrl")
      setpar(n,21,"objID","startColorCtrl")
      setpar(n,23,"objID","endColorCtrl")

     # Set other window parameters
endproc(n)

procedure(selectColor, n)

   col = getcolor(getpar(0,n,"color"))
   if(col != null)
      setpar(0,n,"color",col)
   endif

endproc()



procedure(init)

   p = curplot("1d")
   type = p->axes->type()
   if(type != "box_y_independent")
      message("Error","not a stacked plot","error")
      return
   endif
   trcLst = p->tracelist()
   (x,y) = p->trace(0)->getdata()
   
   sz = size(trcLst)


   yoff0 = p->trace(0)->yoffset()
   yoffn = p->trace(sz-1)->yoffset()
   scol = p->trace(0)->realcolor()
   ecol = p->trace(sz-1)->realcolor()
   startColorCtrl->color(scol)
   endColorCtrl->color(ecol)

   xoffset0 = p->trace(0)->xoffset()
   xoffsetn = p->trace(sz-1)->xoffset()
   xrange = p->axes->xrange
   tilt = (xoffsetn-xoffset0)*(xrange[-1]-xrange[0])
   tiltCtrl->text(tilt)
   minYAxis = p->axes->minaxisvalue()
   maxYAxis = p->axes->maxaxisvalue()
   minDispYAxisCtrl->text("$minYAxis$")
   maxDispYAxisCtrl->text("$maxYAxis$")

   minDataY = (yoff0-0.05)/0.9*(maxYAxis-minYAxis)+minYAxis
   maxDataY = (yoffn-0.05)/0.9*(maxYAxis-minYAxis)+minYAxis
   minYAxisCtrl->text("$minDataY$")
   maxYAxisCtrl->text("$maxDataY$")
   mapping = p->axes->ymapping()
   mappingCtrl->text(mapping)


endproc()

procedure(apply)

   minYAxis = minYAxisCtrl->value
   maxYAxis = maxYAxisCtrl->value
   minDispYAxis = minDispYAxisCtrl->value
   maxDispYAxis = maxDispYAxisCtrl->value
   mapping = mappingCtrl->text
   tilt = tiltCtrl->value

   p = curplot("1d")
   type = p->axes->type()
   if(type != "box_y_independent")
      message("Error","not a stacked plot","error")
      return
   endif
   trcLst = p->tracelist()
   (x,y) = p->trace(0)->getdata()   
   sz = size(trcLst)  
   xrange = p->axes->xrange
   scol = startColorCtrl->color
   ecol = endColorCtrl->color
   scol = scol[0:2]
   ecol = ecol[0:2]

   minOff = (minYAxis-minDispYAxis)/(maxDispYAxis-minDispYAxis)*0.9+0.05
   maxOff = (maxYAxis-minDispYAxis)/(maxDispYAxis-minDispYAxis)*0.9+0.05

   for(k = 0 to sz-1)
   
      tc = p->trace(k)
      tc->xoffset(tilt*k/((sz-1)*(xrange[-1]-xrange[0])))
      tc->yoffset((maxOff-minOff)*k/(sz-1)+minOff)
      tc->realcolor(k/(sz-1)*(ecol-scol)+scol)

   next(k)

   p->axes->ymapping(mapping)
   p->axes->minaxisvalue(minDispYAxis)
   p->axes->maxaxisvalue(maxDispYAxis)

endproc()

