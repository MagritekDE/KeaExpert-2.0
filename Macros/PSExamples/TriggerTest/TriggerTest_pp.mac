############################################################
#  
# Checks the functionality of the TTL trigger input
# and the TTL out pulse.
#
# Note: only for Spinsolves with this hardware upgrade.
#
############################################################

procedure(pulse_program,dir,mode,pars)

# Expose parameters for FX3 implementation
   if(nrArgs == 3)
      assignlist(pars)
   endif

# Interface description (name, label, ctrl, vartype)
  interface = ["nucleus",         "Nucleus",                   "tb",  "readonly_string";
               "b1Freq1H",        "1H frequency (MHz)",        "tb",  "freq";
               "centerFreqPPM",   "Centre frequency (ppm)",    "tb",  "float";
               "90Amplitude1H",   "Pulse amplitude (dB)",      "tb",  "pulseamp";
               "pulseLength1H",   "Pulse length (us)",         "tb",  "pulselength";
               "ttlLength",       "TTL pulse length (us)",     "tb",  "sdelay";
               "repTime",         "Repetition time (ms)",      "tb",  "reptime"]

# Define the tab groups and their order
   groups = ["Pulse_sequence","Acquisition",
             "Processing_Std","Display_PPM_Range","File_Settings"]

# Relationships to determine remaining variable values
   relationships = ["nDataPnts  = nrPnts",
                    "a90Amp     = 90Amplitude1H",
                    "d90Dur     = pulseLength1H",
                    "wTTL       = ttlLength",
                    "dAcqDelay  = ucsUtilities:getacqDelay(d90Dur,1,dwellTime)",
                    "offFreq1H  = (centerFreqPPM-wvPPMOffset1H)*b1Freq1H",
                    "freqCh1    = double(b1Freq1H)+double(offFreq1H/1e6d)",
                    "freqRx     = freqCh1",
                    "totPnts    = nrPnts",
                    "totTime    = acqTime"]

# These parameters will be changed between experiments
   variables = [""]

# Pulse sequence

   initpp(dir)                      # Define compile directory and clear parameter list

      trigger("rising")                # Wait for rising input pulse
      ttlon(0x2)
      wait(wTTL)                       # Generate an output TTL pulse
      ttloff(0x2)
      pulse(1,a90Amp,p1,d90Dur)        # RF pulse on channel 1 with phase p1
      delay(dAcqDelay)
      acquire("overwrite",nDataPnts)   # Acquire FID

   parList = endpp()                # Combine commands and return parameter list

# Phase cycle list
   phaseList  = [0,1,2,3;   # p1 : Pulse phase
                 0,1,2,3]   # pA : Acquire phase


endproc(parList,groups,interface,relationships,variables,null,phaseList)


#####################################################
# Assign those parameters which should take their 
# values from the factory defaults when making a 
# new experiment
#####################################################

procedure(getFactoryBasedParameters, par)

   specPar = gData->getXChannelParameters("1H")
   if(specPar == null)
      return(null)
   endif
   assignlist(specPar)

   modelPar = ucsUtilities:getModelBasedParameters("1H",specPar)

   par = ["rxGain        = $modelPar->rxGain$",
          "pulseLength1H = $PulseLength_1H$",
          "90Amplitude1H = $PowerLevel_1H$",
          "b1Freq1H      = $Frequency_1H$"]

endproc(par)

