# Takes the file 'prospaLicenseRequest.bin' generated by Prospa and returns the mac address 

procedure(decodeMacAddress)

    coderMat = [29,98,184,199,109,115,161,85,13,71,85,216,53,24,252,193,83,212,157,15,
                           175,88,4,191,182,175,162,69,54,122,248,108,84,39,147,143,140,34,21,141]

    unshuffleMat = [12,7,5,24,15,3,6,11,34,32,30,25,38,9,29,31,2,14,22,17,18,0,4,35,23,13,
                             33,19,1,27,10,37,16,21,8,39,28,36,20,26]

   cd(desktop)

   import1dpar("ab","binary","xyrc","real","fls","byte","machine","littleend")
   mIn = import1d("prospaLicenseRequest.bin")

   mIn = :shuffleIt(mIn,unshuffleMat)

   hashValue = round(single(hash(mIn[[0:-5]])))
   hashIn = round(mIn[-4:-1]*(2^[24,16,8,0])')
   if(hashValue != hashIn)
      message("Alert!","Hash values are different!","error")
      return
   endif

   mIn = xor(mIn,coderMat)

   pr "MAC address is: $mIn[0:5]$\n"

endproc(mIn)

# Routine to the shuffle the data
procedure(shuffleIt,mIn,sMat)

   (w,h) = size(mIn)
   mOut = matrix(w*h)
   sMat = reshape(sMat,w*h)
   for(k = 0 to w*h-1)
      mOut[k] = mIn[sMat[k]]
   next(k)

endproc(mOut)