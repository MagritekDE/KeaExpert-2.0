####################################################
# Turn off the RF gates and restore the profile
# for a normal RF pulse
#
# waltzend(channel)
#
#   channel: 1/2
#
#   Duration is 5 us
####################################################

procedure(waltzend, channel)

   if(wvFX3Info->mode == "run")

      if(channel == 1)
         gateTTL        = 0x04000
         gateAndRFTTL   = 0x04008
         FPGA_DDS_Pro0  = 0x118E
         FPGA_DDS_CFR1  = 0x1180
      else
         gateTTL        = 0x00100
         gateAndRFTTL   = 0x00102
         FPGA_DDS_Pro0  = 0x128E
         FPGA_DDS_CFR1  = 0x1280
      endif
      FPGA_DDS_CR = 0x1081
      FPGA_TTL    = 0x00

          # Switch off RF gates
      ps = [15d,      FPGA_TTL,        wvFX3Info->currentTTL,      
          # Enable Auto IO Update
            15d,      FPGA_DDS_CR,     0x0000400,         # Enable Auto IOU          
            15d,      FPGA_DDS_CFR1,   0x0004045,         # CFR1 32-16  RAM enabled, RAM destination = AMP, Internal Profile Control Mode (Pro0-Pro2 then halt), Cosine        
            200d,     FPGA_DDS_CFR1,   0x0000000,         # CFR1 15-0
          # Restore profile 0 for normal pulses
            15d,      FPGA_DDS_Pro0,   0x0000000,         # Set amplitude
            15d,      FPGA_DDS_Pro0,   0x0000000,         # Set phase
            15d,      FPGA_DDS_Pro0,   0x0000000,         # Set frequency high word (TODO)
            205d,     FPGA_DDS_Pro0,   0x0000000] 

      updatePSArray(ps)

   elseif(wvFX3Info->mode == "time")

      cnt = gSeq->psInfo->loopCnt
      gSeq->psInfo->durationNStk[cnt] = gSeq->psInfo->durationNStk[cnt] + 5
      gSeq->psInfo->command = gSeq->psInfo->command + ["rampedrfend,$channel$"]

   elseif(wvFX3Info->mode == "compile")

     # addPSParameters()

   endif

endproc()
