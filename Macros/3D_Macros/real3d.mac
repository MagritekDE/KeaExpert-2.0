####################################################
#                    real3d.mac
#
# Take the real part of each point in a complex 3D 
# matrix.
#
#
# Author: C Eccles
#
# Copyright (c) Magritek December 2006
####################################################



####################################################
# Create, initialize and display the dialog
####################################################

procedure(real3d)

   n = :windowdefinition()
   :updatelist()
   :update_output_name()
   showwindow(n)

endproc()

#############################################################
# Update the menu list
#############################################################

procedure(updatelist)
   menu3d = matrixlist(4)
      if(size(menu3d) > 0)
      setpar(0,3,"menu",menu3d)
      setpar(0,3,"index",1)
   endif
endproc()

#############################################################
# Update the output name using the input name as a template
#############################################################

procedure(update_output_name)

   nameIn = getpar(0,3,"text")
   if(nameIn == "")
      return
   endif
   setpar(0,4,"text",nameIn + "_real")

endproc()

####################################################
# Define the dialog to extract the parameters
####################################################

procedure(windowdefinition)

   # Automatically generated window definition procedure.
   # Any code added manually will be removed if layout modified interactively
   n = window("Take real part of 3D data", -1, -1, 237, 128)

      # Define all controls with basic parameters
       statictext(1, 26, 27, "left", "Input")
       statictext(2, 19, 56, "left", "Output")
       textmenu(3, 56, 25, 128, 200,
          :update_output_name();)
       textmenu(4, 56, 53, 152, 200)
       button(5, 16, 96, 55, 23, "OK",
          :takereal();)
       button(6, 158, 96, 55, 23, "Exit",
          closewindow(0);)
       button(8, 87, 96, 55, 23, "Help",
          :showhelp();)
       groupbox(9, "Matrices", 5, 6, 216, 80)
       button(10, 190, 26, 17, 20, "U",
          :updatelist();
          :update_output_name();)

     # Set other control parameters
       setpar(n,3,"menu",[""])
       setpar(n,4,"menu",[""])

endproc(n)

####################################################
# Display help file
####################################################

procedure(showhelp)
   help("Macros\\3D","real3d.htm")
endproc()

####################################################
# Take the magnitude of each row in the data set
####################################################

procedure(takereal)

# Get name of input matrix
   nameIn = getpar(0,3,"text")
   if(nameIn == "")
      return
   endif
   mIn = alias(nameIn,"eval")
   (w1,h1,d1) = size(mIn)

# Get name of output matrix   
   nameOut = getpar(0,4,"text")

# Make output matrix
   mOut = matrix(w1,h1,d1) 

# Take real part of each row
   for(z = 0 to d1-1)
      for(y = 0 to h1-1)
         mOut[~,y,z] = real(mIn[~,y,z])
      next(y)
   next(z)   
 
# Copy output matrix to a global  
   assign(nameOut,mOut,"global")

   message("Information","Conversion to real completed")

endproc()

