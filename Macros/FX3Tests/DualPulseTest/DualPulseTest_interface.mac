##############################################################
# This procedure protects the procedures after
# interfaceDescrition from being overwritten when compiling
##############################################################

procedure(status)

endproc("readonly")


##############################################################
# This procedure describes the experiment parameter
# user interface. This is autogenerated from the pulse program
# interface list. Do not modify manually
##############################################################

procedure(interfaceDescription)

   interface = [
      "nucleus","Nucleus","tb","readonly_string","",
      "b1Freq1H","1H frequency (MHz)","tb","double","[1,400]",
      "b1Freq13C","13C frequency (MHz)","tb","double","[1,400]",
      "amplitude1","Pulse amplitude 1 (dB)","tb","float","[-85,0]",
      "amplitude2","Pulse amplitude 2 (dB)","tb","float","[-85,0]",
      "pulseLength","Pulse length (us)","tb","float","[0.5,1000]",
      "shiftPoints","Number of points to shift","tb","float","[-100,100]",
      "repTime","Repetition time (ms)","tb","float","[1,1e+008]",
      "acquDiv","Acquisition","dv", "Acquisition", "",
      "rxGain","Receiver gain","tm","integer","$gData->rxGainMenu$",
      "rxChannel","Receiver channel","tm","string","allNuclei",
      "rxPhase","Receiver phase","tb","float","[-360,360]",
      "nrPnts","Number of points","tm","integer","$gData->nrPntsMenu$",
      "dwellTime","Dwell time (us)","tm","float","$gData->dwellTimeMenu$",
      "nrScans","Number of scans","tb","float","[1,1e8]",
      "flatFilter","Flat filter","cb","string","no,yes",
      "accumulate","Accumulate data","cb","string","no,yes",
      "usePhaseCycle","Phase cycle","cb","string","no,yes",
      "bandwidth","Bandwidth (kHz)","tb2","float","",
      "acqTime","Acquisition time (ms)","tb","float","",
      "procDiv","Processing","dv", "Processing_Std", "",
      "zf","Zero fill factor?","tm","integer","[\"1\",\"2\",\"4\",\"8\",\"16\"]",
      "filter","Apodisation filter?","cb","string","no,yes",
      "filterType","Filter type","tm","string","[\"none\",\"exp:1\",\"exponential\",\"sinebellsquared\"]",
      "fdPhaseCorr","Freq. domain phasing","tm","string","[\"autophase\",\"mag\",\"none\"]",
      "dispDiv","Display","dv", "Display_Std", "",
      "usePPMScale","Use ppm scale?","cb","string","no,yes",
      "dispRangeMinPPM","Minimum ppm value","tb","float","[-2000,2000]",
      "dispRangeMaxPPM","Maximum ppm value","tb","float","[-2000,2000]",
      "dispRange","Display range (Hz)","tb","float","[0,2e6]",
      "fileDiv","Files","dv", "File_Settings", "",
      "saveData","Save data?","cb","string","false,true"]


endproc(interface)


#####################################################
# Organise plots for running and loading experiments
# Each row has quoted plot names separated by a semicolon
# Allowable plot names are ptx or imx. (x = 1,2 ...)
# Can have up to 6 plots for 1D 4 for 2D.
#####################################################

procedure(plot_run_layout)

   layout = ["pt1";
             "pt2"]

endproc(layout)


procedure(plot_load_layout)

   layout = ["pt1";
             "pt2"]

endproc(layout)

#####################################################
# Defines the buttons which will appear to the 
# right of the plots below the default buttons.
# If 'null' is returned or this proceudre is missing
# then only default controls will be added.
# Controls may be defined as structure array. 
# Each line defines one button and  must end with
# a seimcolon. Parameters for each button
# are separated by commas.
# All quotes must be correctly escaped if inside
# a string.
# If only one item is in the list it must end in a 
# semicolon to make it a structure array.
#####################################################


procedure(processing_controls)

   layout = struct(buttonLabel = "SNR",     plotName = "pt1", macroToRun = "snrSpectrum()";
                   buttonLabel = "FT",      plotName = "pt1", macroToRun = "apodizeNTransform(\"pt1\",\"pt2\")";
                   buttonLabel = "Phase",   plotName = "pt2", macroToRun = "manualPhase1DSpecial()";
                   buttonLabel = "Apodize", plotName = "pt2", macroToRun = "apodizeFreq()";
                   buttonLabel = "SNR",     plotName = "pt2", macroToRun = "snrSpectrum()";
                   buttonLabel = "ppm/Hz",  plotName = "pt2", macroToRun = "togglePPM_Hz(1)";
                   buttonLabel = "Calib.",  plotName = "pt2", macroToRun = "calibrateXAxis()";
                   buttonLabel = "MNova",   plotName = "pt1", macroToRun = "exportMNova(\"pt1\")";
                   buttonLabel = "MNova",   plotName = "pt2", macroToRun = "exportMNova(\"pt1\")";
                   buttonLabel = "Integ.",  plotName = "pt2", macroToRun = "PeakIntegration(\"pt2\")")

endproc(layout)


