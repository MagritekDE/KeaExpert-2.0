###################################################
# The MLEV17 decoupling sequence block
#
# Arguments:
#
#  ch ..... channel 1 = 1H or 2 = X
#  a90 .... amplitude of the 90 pulses
#  a180 ... amplitude of the 90 pulses
#  d90 .... duration of 90 pulse
#  d180 ... duration of 180 pulse
#  pXp .... +x phase
#  pXm .... -x phase
#  pYp .... +y phase
#  pYm .... -y phase
#  d1 ..... delay between pulses (1)
#
###################################################

procedure(MLEV17, ch, a90, a180, d90, d180, pXp, pXm, pYp, pYm, d1=1)
   
  # Start RRrr
   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
  # End RRrr

  # Start rRRr    
   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
  # End rRRr
     
  # Start rrRR
   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
  # End rrRR

  # Start RrrR
   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
  # End RrrR   

#   
#  # Start RrrR
#   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
#   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
#   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
#   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
#   # End RrrR
#   
#   # Start RRrr
#   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
#   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
#   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
#   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
#   # End RRrr
#   
#   # Start rRRr    
#   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
#   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
#   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
#   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
#   # End rRRr
#     
#   # Start rrRR
#   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
#   pulse(ch,a90,pYm,d90); delay(d1); pulse(ch,a180,pXp,d180); delay(d1); pulse(ch,a90,pYm,d90); delay(d1); 
#   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
#   pulse(ch,a90,pYp,d90); delay(d1); pulse(ch,a180,pXm,d180); delay(d1); pulse(ch,a90,pYp,d90); delay(d1); 
#   # End rrRR

   # Final 180 refocussing
   pulse(ch,a180,pXp,d180); delay(d1); 
   # Final 60 degree
 #  pulse(ch,a60,pXp,d60); delay(d1); 

endproc()

###################################################
# Return the length of the MLEV17 block in us
# given the following delays:
#
#  d90 .... length of the 90 pulse.
#  d180 ... length of the 180 pulse.
#  pgo .... delay between start of pulse command
#           and actual pulse output.
#  d1 ..... delay between pulses (1)
#
###################################################

procedure(duration, d90, d180, pgo, d1=1)

   if(gData->procType == "FX3")
      endDelay = 3
   else
      endDelay = 1
   endif
   dur = (d90*32 + d180*17 + d1*49 + pgo*49 + endDelay)

endproc(dur)