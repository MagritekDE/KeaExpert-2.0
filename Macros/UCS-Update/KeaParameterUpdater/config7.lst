Freescale Semiconductor DSP56300 Assembler  Version 6.3.28   23-07-08  20:31:17  config7.asm  Page 1



1                          ;**************************************************************************
2                          ;   config.asm - routine to store spectrometer configuration data in flash eeprom
3                          ;
4                          ;   February 2010 : version 1.0 For 56309 and ATMEL AT29LV020
5                          ;       original Version
6                          ;   Robin Dykstra
7                          ;
8                          ;       June 2020 update : version 1.1 for DSP56321 and ATMEL AT29LV020
9                          ;       Raschid Tamrzadeh
10                         ;
11                         ;   July 2023 Update: version 1.2 modified to save 2*84 words into FLASH
12                         ;   at locations P:D3FC00 and P:D3FD00. For the new Kea parameter list version 127.
13                         ;   Version 126 parameters will still be present at P:D3FF00
14                         ;   Craig Eccles
15                         ;
16                         ;**************************************************************************
620    
621       P:002000                   org     p:$002000
622    
623       P:002000 605E00            move              r0,x:(r6)+              ;Save registers
624       P:002001 615E00            move              r1,x:(r6)+
625       P:002002 625E00            move              r2,x:(r6)+
626       P:002003 445E00            move              x0,x:(r6)+
627       P:002004 505E00            move              a0,x:(r6)+
628       P:002005 545E00            move              a1,x:(r6)+
629       P:002006 525E00            move              a2,x:(r6)+
630       P:002007 515E00            move              b0,x:(r6)+
631       P:002008 555E00            move              b1,x:(r6)+
632       P:002009 535E00            move              b2,x:(r6)+
633       P:00200A 62F400            move              #$D3FC00,r2             ; config at flash address $D3FC00
                   D3FC00
634       P:00200C 300000            move              #0,r0                   ; start of program mem
635       P:00200D 050810            bsr     <WRY_FLASH                        ; WRY_FLASH loads 84 words each time
636       P:00200E 62F400            move              #$D3FD00,r2             ; config at flash address $D3FD00
                   D3FD00
637       P:002010 305400            move              #84,r0                  ; start of program mem
638       P:002011 05080C            bsr     <WRY_FLASH                        ; WRY_FLASH loads 84 words each time
639       P:002012 53FE00            move              x:-(r6),b2              ; Restore registers
640       P:002013 55FE00            move              x:-(r6),b1
641       P:002014 51FE00            move              x:-(r6),b0
642       P:002015 52FE00            move              x:-(r6),a2
643       P:002016 54FE00            move              x:-(r6),a1
644       P:002017 50FE00            move              x:-(r6),a0
645       P:002018 44FE00            move              x:-(r6),x0
646       P:002019 62FE00            move              x:-(r6),r2
647       P:00201A 61FE00            move              x:-(r6),r1
648       P:00201B 60FE00            move              x:-(r6),r0
649       P:00201C 00000C            rts
650    
651    
652                        ;************************************************************************
Freescale Semiconductor DSP56300 Assembler  Version 6.3.28   23-07-08  20:31:17  config7.asm  Page 2



653                        ;   WRY_FLASH
654                        ;   This routine writes one 256-byte FLASH sector.
655                        ;   Each sector will contain 84 (24-bit) words from DSP RAM (252 bytes)
656                        ;   The last 4 bytes contain a 16-bit checksum of the data
657                        ;   followed by two blank bytes.
658                        ;
659                        ;   enter with:  r2 pointing to starting PEROM Byte Address from 56309 p.o.v.
660                        ;                r0 pointing to first DSP word to save
661                        ;
662                        ;   corrupts:    r0 - points to next Y:memory location to save
663                        ;                r2 - points to next P:FLASH byte address to write
664                        ;                a,b,x0
665                        ;-----------------------------------------------------------------------------
666    
667                        WRY_FLASH
668       P:00201D 20001B            clr     b                                 ;initialize checksum
669                        ;----------------------------------------------------------------------------
670                        ;  disable_protect - Software data Protection routine
671                        ;  Note: upper address lines swapped
672                        ;----------------------------------------------------------------------------
673    
674       P:00201E 44F400            move              #>$AA,x0                ;Atmel needs $AA
                   0000AA
675       P:002020 077084            move              x0,p:$D09555            ;at address $5555
                   D09555
676       P:002022 44F400            move              #>$55,x0                ;then $55
                   000055
677       P:002024 077084            move              x0,p:$D068AA            ;at address $2AAA
                   D068AA
678       P:002026 44F400            move              #>$A0,x0                ;then $A0
                   0000A0
679       P:002028 077084            move              x0,p:$D09555            ;at address $5555
                   D09555
680                                                                            ;--- writes are now enabled
681    
682       P:00202A 065490            dor     #84,move_ycode                    ;move 252 bytes
                   000008
683       P:00202C 5ED800            move                          y:(r0)+,a   ;get 3 byte word
684       P:00202D 200018            add     a,b                               ;accumulate checksum
685       P:00202E 075A8C            move              a1,p:(r2)+              ;move low byte to flash
686       P:00202F 0C1ED0            lsr     #8,a
**** 687 [config7.asm 87]: WARNING --- Pipeline stall reading register written in previous instruction (X data move field)
687       P:002030 075A8C            move              a1,p:(r2)+              ;move mid byte
688       P:002031 0C1ED0            lsr     #8,a
**** 689 [config7.asm 89]: WARNING --- Pipeline stall reading register written in previous instruction (X data move field)
689       P:002032 075A8C            move              a1,p:(r2)+              ;move high byte
690                        move_ycode
691    
692                                                                            ;*** 253rd and 254th bytes are 16-bit checksum
693       P:002033 075A8D            move              b1,p:(r2)+              ;move low byte of checksum to flash
694       P:002034 0C1ED1            lsr     #8,b                              ;get next 8 bits of checksum
Freescale Semiconductor DSP56300 Assembler  Version 6.3.28   23-07-08  20:31:17  config7.asm  Page 3



**** 695 [config7.asm 95]: WARNING --- Pipeline stall reading register written in previous instruction (X data move field)
695       P:002035 075A8D            move              b1,p:(r2)+              ;move mid byte of checksum to flash
696       P:002036 20001B            clr     b                                 ;The last two bytes are 0
**** 697 [config7.asm 97]: WARNING --- Pipeline stall reading register B written in previous instruction (X data move field)
**** 697 [config7.asm 97]: WARNING --- Pipeline stall reading register written in previous instruction (X data move field)
697       P:002037 075A8D            move              b1,p:(r2)+              ;to make up 256.
698       P:002038 075A8D            move              b1,p:(r2)+
699       P:002039 050802            bsr     <delay_20m                        ;wait 20 milliseconds to finish
700                                                                            ;...program cycle
701       P:00203A 00000C            rts
702    
703                        ;---------------------------------------------------------------------------
704                        ; delay_20m --
705                        ; 20.15 ms of delay guarantees that the write cycle has finished.
706                        ;
707                        ; For Write Pulse Width High to extend 150 us requires a minimum of
708                        ; 5100 Icycles for a 33.868 MHz clock.  (29.5 ns/Icycle)
709                        ;
710                        ; the tWC is 20ms, so we just wait long enough here for the
711                        ; write cycle to have started AND finished...
712                        ;
713                        ;---------------------------------------------------------------------------
714                        delay_20m
715       P:00203B 06D290            dor     #210,_l1                          ;110 x 207us = 22.7 ms
                   000006
716       P:00203D 44F400            move              #7000,x0
                   001B58
717       P:00203F 06C420            rep     x0                                ; 207us delay
718       P:002040 000000            nop
719       P:002041 000000            nop
720                        _l1
721       P:002042 00000C            rts
722    
723                                  end

0    Errors
5    Warnings


