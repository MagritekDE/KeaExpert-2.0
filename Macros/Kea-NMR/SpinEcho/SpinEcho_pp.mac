########################################################
#
#
# SpinEcho pulse sequence 
#
# 90 - delay - 180 - delay - acq 
#
########################################################

procedure(pulse_program,dir,mode,pars)

# Expose parameters for FX3 implementation
   if(nrArgs == 3)
      assignlist(pars)
   endif

# Interface description (name, label, ctrlType, varType)
   interface = ["b1FreqCh1",       "B1 Frequency (MHz)",    "tb",  "freq";
                "90AmplitudeCh1",  "90 amplitude (dB)",     "tb",  "float,[-85,-6]";
                "180AmplitudeCh1", "180 amplitude (dB)",    "tb",  "pulseamp";
                "pulseLengthCh1",  "Pulse length (us)",     "tb",  "float,[1,500]";
                "echoTime",        "Echotime (us)",         "tb",  "sdelay";
                "echoShift",       "Echo shift (us)",       "tb",  "float,[-20,20]";
                "repTime",         "Repetition time (ms)",  "tb",  "float,[20,1e8]"]

   groups = ["Pulse_sequence","Acquisition","Processing_Std","File_Settings"]

# Relationships between pulse-sequence and GUI parameters
   relationships = ["nxShim         = 0",
                    "nyShim         = 0",
                    "nzShim         = 0",
                    "noShim         = 0",
                    "a90            = 90AmplitudeCh1",
                    "a180           = 180AmplitudeCh1",
                    "dRF            = pulseLengthCh1",
                    "d90_180        = echoTime/2-dRF/2-pgo-2",
                    "d180_acq       = 100", #echoTime/2-acqTime*500-dRF/2+rxLat-1+echoShift",
                    "dAcq           = echoTime-dRF-pgo-d180_acq-2",
                    "nPnts          = nrPnts",
                    "totPnts        = nrPnts",
                    "totTime        = acqTime"]

# These parameters will be changed between experiments
   variables = [""]

# Pulse sequence
   initpp(dir) # Reset internal parameter list
   
   gradon("x",nxShim)              # Set x shim
   gradon("y",nyShim)              # Set y shim
   gradon("z",nzShim)              # Set z shim 
   gradon("o",noShim)              # Set o shim 
   
   pulse(mode,a90,p1,dRF)        # 90 RF pulse
   delay(d90_180)                # 90 - 180 delay
   pulse(mode,a180,p2,dRF)       # 180 RF pulse
   delay(d180_acq)               # 180 - acq delay
   acquire("append",nPnts)       # Acquire echo and wait
   
   gradoff("x")                    # Set x shim
   gradoff("y")                    # Set y shim
   gradoff("z")                    # Set z shim 
   gradoff("o")                    # Set o shim 

   lst = endpp(0) # Return parameter list

# Phase cycle

   phaseList = [2,0,2,0; # -x,x,-x,x : 90 phase
                3,1,1,3; # -y,y,y,-y : 180 phase
                2,0,2,0] # -x,x,-x,x : Acquire phase

endproc(lst,groups,interface,relationships,variables,0,phaseList)


#####################################################
# Assign those parameters which should take their 
# values from the factory defaults when making a 
# new experiment
#####################################################

procedure(getFactoryBasedParameters, par)

   specPar = KeaParameterUpdater:readSpecPar()
   if(specPar == null)
      return(null)
   endif
   assignlist(specPar)

   par = ["rxGain           = $rxOptGaindB$",
          "pulseLengthCh1   = $pulseLengthCh1*2$",
          "90AmplitudeCh1   = $pulseAmplitudeCh1$",
          "180AmplitudeCh1  = $pulseAmplitudeCh1$",
          "b1FreqCh1          = $frequencyCh1$"]

endproc(par)
