############################################################
#
# A pulse sequence suitable for performing a
# pulse and collect experiment.
#
# pulse - delay - acq
#
############################################################

procedure(pulse_program,dir,mode,pars)

# Expose parameters for FX3 implementation
   if(nrArgs == 3)
      assignlist(pars)
   endif

# Interface description (name, label, ctrltype, vartype)
  interface = ["b1FreqCh1",       "B1 Frequency (MHz)",      "tb", "freq";
               "90AmplitudeCh1",  "Pulse amplitude (dB)",    "tb", "pulseamp";
               "pulseLengthCh1",  "Pulse length (us)",       "tb", "pulselength";
               "acqDelay",        "Pulse acqu. delay (us)",  "tb", "sdelay";
               "repTime",         "Repetition time (ms)",    "tb", "reptime"]

# Relationships to determine remaining variable values
   relationships = ["nDataPnts = nrPnts",
                    "a90Amp    = 90AmplitudeCh1",
                    "d90Dur    = pulseLengthCh1",
                    "dAcqDelay = acqDelay",
                    "totPnts   = nrPnts",
                    "totTime   = acqTime"]

# Define the parameter groups and their order
   groups = ["Pulse_sequence","Acquisition","Processing_Std","Display_PPM_Range","File Settings"]

# These parameters will be changed between experiments
   variables = [""]

# Pulse sequence
   initpp(dir) # Reset internal parameter list
      pulse(mode,a90Amp,p1,d90Dur)     # RF pulse
      delay(dAcqDelay)                 # Pulse - acquire delay
      acquire("overwrite",nDataPnts)   # Acquire echo and wait
   lst = endpp(0) # Return parameter list

# Phase cycle list
  phaseList  = [0,1,2,3;   # Pulse phase
                0,1,2,3]   # Acquire phase

endproc(lst,groups,interface,relationships,variables,0,phaseList)

#####################################################
# Assign those parameters which should take their 
# values from the factory defaults when making a 
# new experiment
#####################################################

procedure(getFactoryBasedParameters, par)

   specPar = gData->specParameters
   if(specPar == null)
      return(null)
   endif
   assignlist(specPar)

   par = ["rxGain         = $rxOptGaindB$",
          "pulseLengthCh1 = $pulseLengthCh1$",
          "90AmplitudeCh1 = $pulseAmplitudeCh1$",
          "b1FreqCh1        = $frequencyCh1$"]

endproc(par)