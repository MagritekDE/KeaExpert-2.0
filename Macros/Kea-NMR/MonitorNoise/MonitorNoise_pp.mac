########################################################
#
# Samples noise data and calculates the rms value
#
########################################################

procedure(pulse_program,dir,mode,pars)

# Expose parameters for FX3 implementation
   if(nrArgs == 3)
      assignlist(pars)
   endif

# Interface description (name, label, x, y, control_type, variable_type)
  interface = ["b1FreqCh1", "B1 Frequency (MHz)",   "tb",  "freq";
               "repTime",   "Repetition time (ms)", "tb",  "reptime";
               "refLevel",  "Reference level (uV)", "tb",  "float,[0,1000]";
               "showRef",   "Show reference",       "cb",  "no,yes"]
 
# Relationships to determine remaining variable values
   relationships = ["n1 = nrPnts",
                    "totPnts = nrPnts",
                    "totTime = acqTime"]

# Define the parameter groups and their order
   groups = ["Pulse_sequence","Acquisition","Processing_Std","Display_PPM_Range","File Settings"]

# These parameters will be changed between experiments
   variables = [""]

# Pulse sequence
   initpp(dir) # Reset internal parameter list
      acquire("overwrite",n1)     # Acquire echo and wait
   lst = endpp(0) # Return parameter list

# Phase cycle
   phaseList = [1,1,1,1]   # Acquire phase

endproc(lst,groups,interface,relationships,variables,0,phaseList)


#####################################################
# Assign those parameters which should take their 
# values from the factory defaults when making a 
# new experiment
#####################################################

procedure(getFactoryBasedParameters, par)

   specPar = KeaParameterUpdater:readSpecPar()
   if(specPar == null)
      return(null)
   endif
   assignlist(specPar)

   par = ["rxGain    = $rxOptGaindB$",
          "b1FreqCh1 = $frequencyCh1$"]

endproc(par)
